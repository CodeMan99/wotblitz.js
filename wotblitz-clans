#!/usr/bin/env node

var program = require('commander');
var request = require('./lib/request.js')('clans');
var types = require('./lib/types.js');

module.exports = {
  list: list,
  info: info,
  accountinfo: accountinfo,
  glossary: glossary
};

if (require.main === module) {
  main(
    program
      .option('-s, --search <name|tag>', 'Part of name or tag for clan search (endpoint)')
      .option('-i, --info <clan_ids>', 'Detailed clan information (endpoint)', types.numbers)
      .option('-a, --accountinfo <account_ids>', 'Player clan data (endpoint)', types.numbers)
      .option('-g, --glossary', 'Information on clan entities (endpoint)')
      .option('-f, --fields <fields>', 'selection of fields', types.fields, [])
      .option('-l, --limit <number>', 'limit the clan search results', Number, null)
      .option('-p, --page <number>', 'page through clan search results', Number, 1)
      .option('-e, --extra', 'include more information in "info" and "accountinfo"')
      .parse(process.argv)
  );
}

function main(opts) {
  if (opts.search) list(opts.search, opts.limit, opts.page, opts.fields, _dir);

  if (opts.info) info(opts.info, opts.extra ? ['members'] : [], opts.fields, _dir);

  if (opts.accountinfo) accountinfo(opts.accountinfo, opts.extra ? ['clan'] : [], opts.fields, _dir);

  if (opts.glossary) glossary(opts.fields, _dir);
}

function _dir(err, data) {
  if (err) throw err;
  console.dir(data, {colors: process.stdout.isTTY, depth: 3});
}

function list(search, limit, pageNumber, fields, callback) {
  request('list', {
    search: search,
    limit: limit,
    page_no: pageNumber,
    fields: fields.join(',')
  }, callback);
}

function info(clanIds, extra, fields, callback) {
  request('info', {
    clan_id: clanIds.join(','),
    extra: extra.join(','),
    fields: fields.join(',')
  }, callback);
}

function accountinfo(accountIds, extra, fields, callback) {
  request('accountinfo', {
    account_id: accountIds.join(','),
    extra: extra.join(','),
    fields: fields.join(',')
  }, callback);
}

function glossary(fields, callback) {
  request('glossary', {
    fields: fields.join(',')
  }, callback);
}
