#!/usr/bin/env node

var program = require('commander');
var request = require('./lib/request.js')('players');
var types = require('./lib/types.js');

module.exports = {
  list: list,
  info: info,
  achievements: achievements
};

if (require.main === module) {
  main(
    program
      .option('-s, --search <name>', 'search for a player (endpoint)')
      .option('-i, --info <account_id>', 'player details (endpoint)', types.numbers)
      .option('-a, --achievements <account_id>', 'achievement details (endpoint)', types.numbers)
      .option('-f, --fields <fields>', 'the fields to select of the endpoint', types.fields, [])
      .option('-t, --token <access_token>', 'an authentication token', null)
      .parse(process.argv)
  );
}

function main(opts) {
  if (opts.search) list(opts.search, _dir);

  if (opts.info) info(opts.info, opts.fields, opts.token, _dir);

  if (opts.achievements) achievements(opts.achievements, _dir);
}

function _dir(err, data) {
  if (err) return console.error(err.stack);
  console.dir(data, {colors: true, depth: 3});
}

function list(search, callback) {
  request('list', {
    search: search
  }, function listRequestCb(err, data) {
    if (err) return callback(err);
    callback(null, data.data);
  });
}

function info(accountIds, fields, accessToken, callback) {
  request('info', {
    access_token: accessToken,
    account_id: accountIds.join(','),
    fields: fields.join(',')
  }, function infoRequestCb(err, data) {
    if (err) return callback(err);
    callback(null, data.data);
  });
}

function achievements(accountIds, callback) {
  request('achievements', {
    account_id: accountIds.join(',')
  }, function achievementsRequestCb(err, data) {
    if (err) return callback(err);
    callback(null, data.data);
  });
}
